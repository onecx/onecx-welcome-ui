openapi: 3.0.3
info:
  title: onecx-welcome-bff
  description: OneCX Welcome BFF
  version: 1.0.0
  contact:
    email: 'tkit_dev@1000kit.org'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: 'http://onecx-welcome-bff:8080'
tags:
  - name: imagesInternal
  - name: announcements
paths:
  /images/info/{id}:
    get:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - imagesInternal
      description: get Image information by id
      operationId: getImageInfoById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        '404':
          description: NOT FOUND
    put:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: update Image information
      operationId: updateImageInfo
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfo'
      responses:
        '200':
          description: UPDATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    delete:
      x-onecx:
        permissions:
          image:
            - delete
      tags:
        - imagesInternal
      description: delete Image information
      operationId: deleteImageInfoById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: DELETED
        '404':
          description: NOT FOUND
  /images/info:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: create image information
      operationId: createImageInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfo'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/{workspaceName}/info:
    get:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - imagesInternal
      description: get all existing Image informations by workspace name
      operationId: getAllImageInfosByWorkspaceName
      parameters:
        - in: path
          name: workspaceName
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageInfo'
  /images/info/reorder:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: update order of Images
      operationId: updateImageOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageInfoReorderRequest'
      responses:
        '200':
          description: UPDATED
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images:
    post:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: create Image
      operationId: createImage
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDataResponse'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /images/{id}:
    get:
      x-onecx:
        permissions:
          image:
            - read
      tags:
        - imagesInternal
      description: get Image by id
      operationId: getImageById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDataResponse'
        '404':
          description: NOT FOUND
    put:
      x-onecx:
        permissions:
          image:
            - write
      tags:
        - imagesInternal
      description: update Image by id
      operationId: updateImageById
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDataResponse'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /announcements/search:
    post:
      x-onecx:
        permissions:
          announcement:
            - read
      tags:
        - announcements
      description: search announcements by criteria
      operationId: searchAnnouncementsByCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementSearchCriteria'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementPageResult'
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  schemas:
    ImageDataResponse:
      type: object
      properties:
        imageId:
          type: string
        imageData:
          type: string
          format: binary
        dataLength:
          type: integer
        mimeType:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
    ImageInfo:
      required:
        - workspaceName
      type: object
      properties:
        position:
          type: string
        visible:
          type: boolean
        url:
          type: string
        imageId:
          type: string
        id:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        workspaceName:
          type: string
    ImageInfoReorderRequest:
      type: object
      properties:
        imageInfos:
          type: array
          items:
            $ref: '#/components/schemas/ImageInfo'
    Announcement:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        type:
          $ref: '#/components/schemas/Type'
        priority:
          $ref: '#/components/schemas/Priority'
        status:
          $ref: '#/components/schemas/Status'
        startDate:
          $ref: '#/components/schemas/OffsetDateTime'
        endDate:
          $ref: '#/components/schemas/OffsetDateTime'
        productName:
          type: string
    AnnouncementPageResult:
      description: PageResult  for Announcements
      type: object
      properties:
        totalElements:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Announcement'
    AnnouncementSearchCriteria:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type'
        priority:
          $ref: '#/components/schemas/Priority'
        status:
          $ref: '#/components/schemas/Status'
        startDateFrom:
          $ref: '#/components/schemas/OffsetDateTime'
        startDateTo:
          $ref: '#/components/schemas/OffsetDateTime'
        endDateFrom:
          $ref: '#/components/schemas/OffsetDateTime'
        endDateTo:
          $ref: '#/components/schemas/OffsetDateTime'
        productName:
          type: string
        title:
          type: string
        workspaceName:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          type: integer
    Priority:
      enum:
        - IMPORTANT
        - NORMAL
        - LOW
      type: string
    Status:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
    Type:
      enum:
        - EVENT
        - INFO
        - SYSTEM_MAINTENANCE
      type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
